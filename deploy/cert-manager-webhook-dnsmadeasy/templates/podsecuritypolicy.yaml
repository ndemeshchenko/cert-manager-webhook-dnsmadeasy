{{- if .Values.rbac.pspEnabled }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: psp-privileged-cert-manager
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - extensions
  resourceNames:
  - 0privileged-cert-manager
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "cert-manager-webhook-dnsmadeasy.fullname" . }}:psp:privileged-cert-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "cert-manager-webhook-dnsmadeasy.name" . }}
    chart: {{ include "cert-manager-webhook-dnsmadeasy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp-privileged-cert-manager
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: {{ include "cert-manager-webhook-dnsmadeasy.fullname" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: 0privileged-cert-manager
spec:
  allowedCapabilities:
  - NET_BIND_SERVICE
  - ALL
  requiredDropCapabilities: []
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  allowPrivilegeEscalation: true
  fsGroup:
    rule: RunAsAny
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
{{- end }}